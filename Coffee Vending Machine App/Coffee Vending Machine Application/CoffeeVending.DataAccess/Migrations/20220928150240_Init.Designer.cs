// <auto-generated />
using CoffeeVending.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeVending.DataAccess.Migrations
{
    [DbContext(typeof(CoffeeVendingMachineDbContext))]
    [Migration("20220928150240_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeVendingMachine.Domain.Models.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageLocation = "~/img/latte_01.jpg",
                            Name = "Latte",
                            Price = 5f
                        },
                        new
                        {
                            Id = 2,
                            ImageLocation = "~/img/macchiato_01.jpg",
                            Name = "Macchiato",
                            Price = 6f
                        },
                        new
                        {
                            Id = 3,
                            ImageLocation = "~/img/espresso_01.jpg",
                            Name = "Esspresso",
                            Price = 4f
                        },
                        new
                        {
                            Id = 4,
                            ImageLocation = "~/img/americano_01.jpg",
                            Name = "Americano",
                            Price = 7f
                        },
                        new
                        {
                            Id = 5,
                            ImageLocation = "~/img/irish_01.jpg",
                            Name = "Irish",
                            Price = 10f
                        });
                });

            modelBuilder.Entity("CoffeeVendingMachine.Domain.Models.CoffeeIngridient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoffeeId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeId");

                    b.HasIndex("IngridientId");

                    b.ToTable("CoffeeIngridient");
                });

            modelBuilder.Entity("CoffeeVendingMachine.Domain.Models.Ingridients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Ingridients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sugar",
                            Price = 0f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Creamer",
                            Price = 2f
                        },
                        new
                        {
                            Id = 3,
                            Name = "Caramelle",
                            Price = 3f
                        },
                        new
                        {
                            Id = 4,
                            Name = "More milk",
                            Price = 4f
                        },
                        new
                        {
                            Id = 5,
                            Name = "has a single dose of milk",
                            Price = 3f
                        },
                        new
                        {
                            Id = 6,
                            Name = "one pack of sugar",
                            Price = 0f
                        });
                });

            modelBuilder.Entity("CoffeeVendingMachine.Domain.Models.CoffeeIngridient", b =>
                {
                    b.HasOne("CoffeeVendingMachine.Domain.Models.Ingridients", "Ingridients")
                        .WithMany("Characteristics")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeVendingMachine.Domain.Models.Coffee", "Coffee")
                        .WithMany("Characteristics")
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
